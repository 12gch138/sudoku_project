import { writable } from 'svelte/store';
import { userGrid } from './grid';
import { manager } from "@sudoku/strategy/strategy_manager"
function filterCoordinates(candidates) {
    const promptCoordinates = writable([]);
    let selectedCoordinates = [];

    for (let y = 0; y < candidates.length; y++) {

        for (let x = 0; x < candidates[y].length; x++) {
            if (candidates[y][x] !== 0) {
                selectedCoordinates.push({ x, y, value: candidates[y][x] });
            }
        }
    }
    promptCoordinates.set(selectedCoordinates);
    return promptCoordinates;
}


let testGrid = writable([
    [1, 2, 0],
    [5, 0, 7],
    [9, 8, 1],
]);

export function updateTest() {
    testGrid.subscribe((test) => {
        promptCoordinates = filterCoordinates(test);
    })
}

export function updataCandidates() {
    userGrid.subscribe((grid) => {
        testGrid.set(manager.getMatrix(userGrid.getMatrix()));
    })
}

export function updateUserGridFromCoordinates() {
    promptCoordinates.subscribe((coordinates) => {


        coordinates.forEach(({ x, y, value }) => {

        userGrid.set({x,y},value);

    });
    });
    }

export let promptCoordinates=filterCoordinates(testGrid);
