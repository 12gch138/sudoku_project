import { derived, writable } from 'svelte/store';
import { settings } from '@sudoku/stores/settings';

function createHints() {
	const hints = writable(Infinity);

	settings.subscribe((_settings) => {
		if (_settings.hintsLimited) {
			hints.update(_hints => {
				if (_hints > _settings.hints) return _settings.hints;

				return _hints;
			})
		} else {
			hints.set(Infinity);
		}
	});

	return {
		subscribe: hints.subscribe,

		useHint: () => {
			hints.update(h => h > 0 ? h - 1 : 0);
		},
	};
}

export const hints = createHints();
export const hintsAvailable = derived(hints, ($hints) => $hints > 0);