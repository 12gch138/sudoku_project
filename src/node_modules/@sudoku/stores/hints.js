import { writable, get } from 'svelte/store';
import { settings } from '@sudoku/stores/settings';

function getHintCount() {
	const { hintsLimited, hints } = get(settings);
	if (hintsLimited) {
		return hints;
	} else {
		return Infinity;
	}
}

function createHints() {
	const hints = writable(getHintCount());

	settings.subscribe((_settings) => {
		console.log(_settings, get(hints))
		if (_settings.hintsLimited) {
			if (get(hints) > _settings.hints) hints.set(_settings.hints);
		} else {
			hints.set(Infinity);
		}
	});

	return {
		subscribe: hints.subscribe,

		useHint: () => {
			hints.update(h => h > 0 ? h - 1 : 0);
		}
	};
}

export const hints = createHints();