import { writable } from 'svelte/store';

function getBoxPos(x, y) {
	return {
		x: Math.floor((x - 1) / 3),
		y: Math.floor((y - 1) / 3)
	}
}

function createCursor() {
	const cursor = writable({ x: 0, y: 0 });

	return {
		subscribe: cursor.subscribe,

		set: (x, y) => {
			cursor.set({ x, y });
		},

		move: (xDir = 0, yDir = 0) => {
			cursor.update(currCursor => {
				return {
					x: currCursor.x + xDir,
					y: currCursor.y + yDir,
				};
			});
		},

		isInitial: (cursorStore) => {
			return (cursorStore.x === 0 && cursorStore.y === 0);
		},

		isAt: (cursorStore, x, y) => {
			return (cursorStore.x === x && cursorStore.y === y);
		},

		isInArea: (cursorStore, x, y) => {
			const cursorBoxPos = getBoxPos(cursorStore.x, cursorStore.y);
			const cellBoxPos = getBoxPos(x, y);
			return (cursorStore.x === x || cursorStore.y === y || (cursorBoxPos.x === cellBoxPos.x && cursorBoxPos.y === cellBoxPos.y));
		}
	};
}

export const cursor = createCursor();