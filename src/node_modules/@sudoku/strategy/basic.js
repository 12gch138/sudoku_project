import { Strategy } from "./strategy.js";

class Basic extends Strategy {
    constructor() {
        super('Basic');
    }

    get_candidate(board) {
        let candidates = [];

        // 遍历每一行，收集每个数字在每行中的候选位置
        for (let row = 0; row < 9; row++) {
            candidates.push([]);
            for (let col = 0; col < 9; col++) {
                candidates[row].push([]);
                if (board[row][col] == 0) {
                    for (let num = 1; num <= 9; num++) {
                        if (isValidPlacement(board, row, col, num)) {
                            candidates[row][col].push(num);
                        }
                    }
                }
            }
        }
        return candidates;
    }
}

function isValidPlacement(board, row, col, num) {
    // 检查行、列和九宫格中是否已经存在该数字
    for (let i = 0; i < 9; i++) {
        if (board[row][i] == num || board[i][col] == num) {
            return false;
        }
    }

    let startRow = Math.floor(row / 3) * 3;
    let startCol = Math.floor(col / 3) * 3;
    for (let i = startRow; i < startRow + 3; i++) {
        for (let j = startCol; j < startCol + 3; j++) {
            if (board[i][j] == num) {
                return false;
            }
        }
    }

    return true;
}

export const basic_strategy = new Basic();